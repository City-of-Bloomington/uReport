---
- hosts: ureport
  become: yes
  roles:
    - City-of-Bloomington.mysql
    - City-of-Bloomington.php
    - City-of-Bloomington.solr

  tasks:
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - imagemagick
        - php-mysql
        - xsltproc

    - name: Create mysql database
      mysql_db:
        config_file: "{{ mysql_defaults_extra_file }}"
        name: "{{ ureport_db.name }}"
        state: present
      no_log: True

    - name: Create mysql user for site
      mysql_user:
        name:     "{{ ureport_db.username }}"
        password: "{{ ureport_db.password }}"
        priv:     "{{ ureport_db.name }}.*:ALL"
        state: present
        config_file: "{{ mysql_defaults_extra_file }}"
      no_log: True

    - name: Extract release
      unarchive:
        src: "{{ ureport_archive_path }}"
        dest: /usr/local/src
      register: release

    - name: Install release
      command: rsync -rl /usr/local/src/ureport/ {{ ureport_install_path }}/
      when: release.changed

    - name: Update apache configuration
      template:
        src: ureport.conf
        dest: /etc/apache2/sites-enabled/conf.d/ureport.conf
        owner: root
        group: root
        mode: 0644
      notify: apache_restart

    - name: Create Solr Core
      become: true
      become_user: solr
      command: "{{ solr_install_dir }}/solr/bin/solr create -c ureport"
      args:
        creates: "{{ solr_home }}/data/ureport"
      register: core

    - name: "Copy solrconfig XSL"
      become: "true"
      become_user: "solr"
      copy:
        src: "solrconfig.xsl"
        dest: "/tmp"

    - name: "Update solrconfig"
      become: "true"
      become_user: "solr"
      command: "xsltproc -o solrconfig.xml /tmp/solrconfig.xsl solrconfig.xml"
      args:
        chdir: "{{ solr_home }}/data/ureport/conf"
      notify: "solr_restart"

    - name: Copy Solr Schema
      become: true
      become_user: solr
      copy:
        src: "{{ ureport_install_path }}/crm/scripts/solr/schema.xml"
        dest: "{{ solr_home }}/data/ureport/conf/schema.xml"
        remote_src: "true"
      notify: "solr_restart"

    - name: Update uReport site_config
      template: src=site_config.j2 dest={{ ureport_install_path }}/crm/data/site_config.inc

    - name: Create backup directory
      file: path=/srv/backups/ureport state=directory group=staff mode="g+rw" recurse=yes

    - name: Install CRON backup script
      template:
        src: backup.sh
        dest: /etc/cron.daily/backup.d/ureport
        mode: 0755

    - name: Install CRON backup credentials
      template:
        src: backup.cnf
        dest: /etc/cron.daily/backup.d/ureport.cnf
        mode: 0400

    - name: Install CKAN upload cron script
      template:
        src: updateCkan.sh
        dest: /etc/cron.daily/backup.d/updateCkan
        mode: 0755

    - name: Update permissions
      file: path={{ ureport_install_path }} state=directory owner=www-data group=staff mode="g+rw" recurse=yes
...
