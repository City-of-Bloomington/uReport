<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default)
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="example" version="1.5">
<!-- attribute "name" is the name of this schema and is only used for display purposes.
	Applications should change this to reflect the nature of the search collection.
	version="x.y" is Solr's version number for the schema syntax and semantics.  It should
	not normally be changed by applications.
	1.0: multiValued attribute did not exist, all fields are multiValued by nature
	1.1: multiValued attribute introduced, false by default
	1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
	1.3: removed optional field compress feature
	1.4: default auto-phrase (QueryParser feature) to off
	1.5: omitNorms defaults to true for primitive field types (int, float, boolean, string...)
	-->

<types>
<!-- field type definitions. The "name" attribute is
	just a label to be used by field definitions.  The "class"
	attribute and any other attributes determine the real
	behavior of the fieldType.
		Class names starting with "solr" refer to java classes in the
	org.apache.solr.analysis package.
-->
	<fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>

	<!-- The StrField type is not analyzed, but indexed/stored verbatim. -->
	<fieldType name="string" class="solr.StrField" sortMissingLast="true" />

	<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
			is a more restricted form of the canonical representation of dateTime
			http://www.w3.org/TR/xmlschema-2/#dateTime
			The trailing "Z" designates UTC time and is mandatory.
			Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
			All other components are mandatory.

			Expressions can also be used to denote calculations that should be
			performed relative to "NOW" to determine the value, ie...

				NOW/HOUR
					... Round to the start of the current hour
				NOW-1DAY
					... Exactly 1 day prior to now
				NOW/DAY+6MONTHS+3DAYS
					... 6 months and 3 days in the future from the start of
						the current day

			Consult the DateField javadocs for more information.

			Note: For faster range queries, consider the tdate type
		-->
	<fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
	<!-- A general text field that has reasonable, generic
			cross-language defaults: it tokenizes with StandardTokenizer,
		removes stop words from case-insensitive "stopwords.txt"
		(empty by default), and down cases.  At query time only, it
		also applies synonyms. -->
	<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
		<analyzer type="index">
			<tokenizer class="solr.StandardTokenizerFactory"/>
			<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
			<!-- in this example, we will only use synonyms at query time
			<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
			-->
			<filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
		<analyzer type="query">
			<tokenizer class="solr.StandardTokenizerFactory"/>
			<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
			<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
			<filter class="solr.LowerCaseFilterFactory"/>
		</analyzer>
	</fieldType>

	<!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
	<fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>
</types>


<fields>
	<!-- Valid attributes for fields:
		name: mandatory - the name for the field
		type: mandatory - the name of a previously defined type from the
		<types> section
		indexed: true if this field should be indexed (searchable or sortable)
		stored: true if this field should be retrievable
		multiValued: true if this field may contain multiple values per document
		omitNorms: (expert) set to true to omit the norms associated with
		this field (this disables length normalization and index-time
		boosting for the field, and saves some memory).  Only full-text
		fields or fields that need an index-time boost need norms.
		Norms are omitted for primitive (non-analyzed) types by default.
		termVectors: [false] set to true to store the term vector for a
		given field.
		When using MoreLikeThis, fields used for similarity should be
		stored for best performance.
		termPositions: Store position information with the term vector.
		This will increase storage costs.
		termOffsets: Store offset information with the term vector. This
		will increase storage costs.
		default: a value that should be used if no value is specified
		when adding a document.
	-->
	<field name="recordKey"   type="string" indexed="true" stored="true" required="true" omitNorms="true" omitTermFreqAndPositions="true" />
	<field name="recordType"  type="string" indexed="true" stored="true" required="true" />

	<field name="id"          type="int"    indexed="true" stored="true" required="true" />

	<!-- Ticket Related Fields -->
	<field name="enteredDate"   type="date"         indexed="true" stored="true" />
	<field name="coordinates"   type="location"     indexed="true" stored="true" />
	<field name="description"   type="text_general" indexed="true" stored="true" />

	<field name="department_id" type="int" indexed="true" stored="true" />
	<field name="category_id"   type="int" indexed="true" stored="true" />
	<field name="client_id"     type="int" indexed="true" stored="true" />
	<field name="resolution_id" type="int" indexed="true" stored="true" />
	<field name="address_id"    type="int" indexed="true" stored="true" />

	<field name="status"        type="string" indexed="true" stored="true" />
	<field name="location"      type="string" indexed="true" stored="true" />
	<field name="city"          type="string" indexed="true" stored="true" />
	<field name="state"         type="string" indexed="true" stored="true" />
	<field name="zip"           type="string" indexed="true" stored="true" />

	<field name="displayPermissionLevel" type="string" indexed="true" stored="false" />

	<field name="enteredByPerson_id"  type="int" indexed="true" stored="false" />
	<field name="assignedPerson_id"   type="int" indexed="true" stored="false" />
	<field name="referredPerson_id"   type="int" indexed="true" stored="false" />

	<!-- Issue Related Fields
		Since tickets have multiple issues, all these need to be multiValued
	-->
	<field name="issueType_id"        type="int" indexed="true" stored="true"  multiValued="true" />
	<field name="label_id"            type="int" indexed="true" stored="true"  multiValued="true" />
	<field name="contactMethod_id"    type="int" indexed="true" stored="true"  multiValued="true" />
	<field name="reportedByPerson_id" type="int" indexed="true" stored="false" multiValued="true" />

   <!-- Sortable string values for *_id fields -->
   <field name="department"       type="string" indexed="true" stored="false" />
   <field name="category"         type="string" indexed="true" stored="false" />
   <field name="client"           type="string" indexed="true" stored="false" />
   <field name="resolution"       type="string" indexed="true" stored="false" />
   <field name="enteredByPerson"  type="string" indexed="true" stored="false" />
   <field name="assignedPerson"   type="string" indexed="true" stored="false" />
   <field name="referredPerson"   type="string" indexed="true" stored="false" />

   <field name="issueType"        type="string" indexed="true" stored="false" multiValued="true" />
   <field name="label"            type="string" indexed="true" stored="false" multiValued="true" />
   <field name="contactMethod"    type="string" indexed="true" stored="false" multiValued="true" />
   <field name="reportedByPerson" type="string" indexed="true" stored="false" multiValued="true" />

   <dynamicField name="*"    type="string" indexed="true" stored="true" />
</fields>

<!-- Field to use to determine and enforce document uniqueness.
	Unless this field is marked with required="false", it will be a required field
-->
<uniqueKey>recordKey</uniqueKey>

</schema>
