<?php
/**
 * Displayed in the banner
 */
define('APPLICATION_NAME','CRM');
define('LOCATION_NAME','City of Bloomington, Mark Kruzan, Mayor');

/**
 * Database Setup
 */
define('DB_ADAPTER','mongodb');
define('DB_HOST','localhost');
define('DB_NAME','crm');

/**
 * Where on the filesystem this application is installed
 */
define('APPLICATION_HOME','/var/www/sites/application_name');

/**
 * The URL to get to this site
 * Do NOT use a trailing slash
 */
define('BASE_URL','http://localhost');

/**
 * Where on the filesystem the internal framework is installed.
 */
define('FRAMEWORK',APPLICATION_HOME.'/libraries/framework');

/**
 * This needs to point to the library directory inside your
 * installation of the ZendFramework
 * http://framework.zend.com
 */
define('ZEND',APPLICATION_HOME.'/libraries/ZendFramework/library');

/**
 * YUI
 * What host do you want to use for the YUI libraries
 */
define('YUI','http://yui.yahooapis.com/3.4.1/build');

/**
 * Addresses can be validated against a master address web service
 */
//define('ADDRESS_SERVICE','http://localhost/master_address');

/**
 * Rental addresses have additional information we can look up
 * Owner information is being provided from this service
 */
//define('RENTAL_SERVICE','http://localhost/rentpro/RentService');

/**
 * Some default values for Tickets in the system
 */
define('DEFAULT_CITY','Bloomington');
define('DEFAULT_STATE','IN');

/**
 * Default coordinates for map center
 * This should probably be the center of your city
 * If you can, it's best to adjust these values in your php.ini
 */
define('DEFAULT_LATITUDE',ini_get('date.default_latitude'));
define('DEFAULT_LONGITUDE',ini_get('date.default_longitude'));

/**
 * This is a unique string identifying your jurisdiction to the
 * rest of the Open311 community.
 *
 * Open311 servers typically use their domain name as their jurisdiction
 */
define('OPEN311_JURISDICTION','localhost');

/**
 * Date format
 * All dates displayed will use this format
 */
define('DATE_FORMAT','Y-m-d');

/**
 * Used when there's an error on the site.  The Framework will
 * print out a nice error message, encouraging users to report any problems
 * See: FRAMEWORK/globalFunctions.inc
 */
define('ADMINISTRATOR_NAME','Site Admin');
define('ADMINISTRATOR_EMAIL','admin@servername.com');

/**
 * Controls whether the system sends email notifications to people
 */
define('NOTIFICATIONS_ENABLED',true);

/**
 * Set how we want to handle errors
 * PHP_DEFAULT - do whatever's configured in php.ini
 *
 * If you do not define error handling to PHP_DEFAULT
 * the custom error handlers kick in.  All of the custom error display
 * frunctions are in FRAMEWORK/globalFunctions.inc.  The custom error
 * function decide what to do based on $ERROR_REPORING array values
 *
 * PRETTY_PRINT - Display a message in the browser
 * EMAIL_ADMIN - email the Administrator
 * EMAIL_USER - email the logged in user
 * SKIDDER - post errors to a Skidder server (see config below)
*/
define('ERROR_REPORTING','PHP_DEFAULT');
//define('ERROR_REPORTING','CUSTOM');
//$ERROR_REPORTING = array('PRETTY_PRINT','SKIDDER');

/**
 * Skidder is a web service for error notifications.  Error reporting supports
 * posting errors to a Skidder server.  You must register for an application_id
 * on the skidder server you want to post errors to.
 */
//define('SKIDDER_URL','http://localhost/skidder/home.php');
//define('SKIDDER_APPLICATION_ID',);

/**
 * Directory Configuration
 *
 * This supports doing user authentication from multiple external
 * directories, such as LDAP or ADS. This is required since city staff
 * are in a seperate LDAP directory from public user accounts.
 * Classes that implement ExternalIdentity should have an entry here.
 *
 * See: ExternalIdentity
 */
$DIRECTORY_CONFIG = array(
//	'Employee'=>array(
//		'DIRECTORY_SERVER'=>'ldaps://example.org:636',
//		'DIRECTORY_BASE_DN'=>'OU=Department,DC=example,DC=org',
//		'DIRECTORY_USERNAME_ATTRIBUTE'=>'CN',
//		'DIRECTORY_USER_BINDING'=>'{username}@bloomington.in.gov',
//		'DIRECTORY_ADMIN_BINDING'=>'admin@bloomington.in.gov',
//		'DIRECTORY_ADMIN_PASS'=>'password'
//	)
);

/**
 * CAS authentication http://www.jasig.org/cas
 *
 * https://wiki.jasig.org/display/CASC/phpCAS
 *
 * phpCAS is a PHP library for handling the calls to the CAS service
 * It is the official library, part of the Jasig CAS project
 */
//define('CAS','/var/www/libraries/phpCAS');
//define('CAS_SERVER','cas.somewhere.org');
//define('CAS_URI','cas');

/**
 * Caching
 * Selecting distinct values from the full collection in Mongo is really slow.
 * As of r493, the only place this call is made is when displaying the search form
 * The search form populates a bunch of drop down boxes based on these queries
 * Enabling this cache can greatly improve the speed of the search form,
 * at the expense of one of the drop-downs not reflecting the latest values
 * See: Ticket::getDistinct()
 */
define('DISTINCT_QUERY_CACHE',true);
define('DISTINCT_QUERY_CACHE_LIFETIME',3600); // Lifetime in seconds

//-------------------------------------------------------------------
// Bootstrap code
// No editing is usually needed after this point
//-------------------------------------------------------------------
/**
 * Enable autoloading for the PHP libraries
 */
ini_set('include_path','.'.PATH_SEPARATOR.ZEND);
require_once 'Zend/Loader/Autoloader.php';
Zend_Loader_Autoloader::getInstance();

include FRAMEWORK.'/globalFunctions.php';
spl_autoload_register('autoload');

/**
 * Session Startup
 * Don't start a session for CLI usage.
 * We only want sessions when PHP code is executed from the webserver
 */
if (!defined('STDIN')) {
	ini_set('session.save_path',APPLICATION_HOME.'/data/sessions');
	session_start();
}

/**
 * Load the Zend_Acl
 * Access control is going to handled using the Zend_Acl
 * We only need to load it, if someone is logged in
 */
if (isset($_SESSION['USER'])) {
	include APPLICATION_HOME.'/access_control.inc';
}

/**
 * Grab a timestamp for calculating process time
 */
$startTime = microtime(1);
